name: Update Formula

on:
  repository_dispatch:
    types: [update-formula]
  workflow_dispatch:
    inputs:
      formula:
        description: 'Formula name to update'
        required: true
        default: 'mcproc'
      version:
        description: 'New version (e.g., v0.1.1)'
        required: true

permissions:
  contents: write

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Update Formula
        env:
          FORMULA_NAME: ${{ github.event.client_payload.formula || github.event.inputs.formula }}
          VERSION: ${{ github.event.client_payload.version || github.event.inputs.version }}
        run: |
          set -e
          echo "Debug: Raw inputs:"
          echo "  client_payload.formula: ${{ github.event.client_payload.formula }}"
          echo "  client_payload.version: ${{ github.event.client_payload.version }}"
          echo "  inputs.formula: ${{ github.event.inputs.formula }}"
          echo "  inputs.version: ${{ github.event.inputs.version }}"
          echo "Environment variables:"
          echo "  FORMULA_NAME: $FORMULA_NAME"
          echo "  VERSION: $VERSION"
          echo "Updating formula: $FORMULA_NAME to version: $VERSION"
          
          # Ensure VERSION has 'v' prefix for GitHub releases
          if [[ "$VERSION" != v* ]]; then
            VERSION_WITH_V="v$VERSION"
            VERSION_NUM="$VERSION"
          else
            VERSION_WITH_V="$VERSION"
            VERSION_NUM="${VERSION#v}"
          fi
          echo "VERSION_WITH_V: $VERSION_WITH_V"
          echo "VERSION_NUM: $VERSION_NUM"
          
          # Download and calculate SHA256 for each platform
          echo "Downloading SHA256 checksums..."
          
          # macOS ARM64
          URL="https://github.com/neptaco/${FORMULA_NAME}/releases/download/${VERSION_WITH_V}/${FORMULA_NAME}-${VERSION_NUM}-aarch64-apple-darwin.tar.gz"
          echo "Fetching SHA256 for macOS ARM64 from: ${URL}.sha256"
          SHA_MACOS_ARM64=$(curl -sL "${URL}.sha256" | awk '{print $1}')
          if [ -z "$SHA_MACOS_ARM64" ]; then
            echo "Error: Failed to fetch SHA256 for macOS ARM64"
            exit 1
          fi
          echo "SHA_MACOS_ARM64: ${SHA_MACOS_ARM64}"
          
          # macOS x86_64
          URL="https://github.com/neptaco/${FORMULA_NAME}/releases/download/${VERSION_WITH_V}/${FORMULA_NAME}-${VERSION_NUM}-x86_64-apple-darwin.tar.gz"
          echo "Fetching SHA256 for macOS x86_64 from: ${URL}.sha256"
          SHA_MACOS_X64=$(curl -sL "${URL}.sha256" | awk '{print $1}')
          if [ -z "$SHA_MACOS_X64" ]; then
            echo "Error: Failed to fetch SHA256 for macOS x86_64"
            exit 1
          fi
          echo "SHA_MACOS_X64: ${SHA_MACOS_X64}"
          
          # Linux ARM64
          URL="https://github.com/neptaco/${FORMULA_NAME}/releases/download/${VERSION_WITH_V}/${FORMULA_NAME}-${VERSION_NUM}-aarch64-unknown-linux-gnu.tar.gz"
          echo "Fetching SHA256 for Linux ARM64 from: ${URL}.sha256"
          SHA_LINUX_ARM64=$(curl -sL "${URL}.sha256" | awk '{print $1}')
          if [ -z "$SHA_LINUX_ARM64" ]; then
            echo "Error: Failed to fetch SHA256 for Linux ARM64"
            exit 1
          fi
          echo "SHA_LINUX_ARM64: ${SHA_LINUX_ARM64}"
          
          # Linux x86_64
          URL="https://github.com/neptaco/${FORMULA_NAME}/releases/download/${VERSION_WITH_V}/${FORMULA_NAME}-${VERSION_NUM}-x86_64-unknown-linux-gnu.tar.gz"
          echo "Fetching SHA256 for Linux x86_64 from: ${URL}.sha256"
          SHA_LINUX_X64=$(curl -sL "${URL}.sha256" | awk '{print $1}')
          if [ -z "$SHA_LINUX_X64" ]; then
            echo "Error: Failed to fetch SHA256 for Linux x86_64"
            exit 1
          fi
          echo "SHA_LINUX_X64: ${SHA_LINUX_X64}"
          
          # Update the formula file
          FORMULA_FILE="Formula/${FORMULA_NAME}.rb"
          echo "Updating formula file: $FORMULA_FILE"
          
          # Check if file exists and is writable
          if [ ! -f "$FORMULA_FILE" ]; then
            echo "Error: Formula file not found: $FORMULA_FILE"
            exit 1
          fi
          
          if [ ! -w "$FORMULA_FILE" ]; then
            echo "Error: Formula file is not writable: $FORMULA_FILE"
            exit 1
          fi
          
          # Create backup
          cp "$FORMULA_FILE" "${FORMULA_FILE}.backup"
          echo "Created backup: ${FORMULA_FILE}.backup"
          
          # Update formula using sed commands
          echo "Updating formula version and SHA256 hashes..."
          
          # Update version
          sed -i.bak "s/version \".*\"/version \"${VERSION_NUM}\"/" "$FORMULA_FILE"
          
          # Update SHA256 hashes - more precise pattern matching
          # macOS ARM64
          sed -i.bak '/aarch64-apple-darwin\.tar\.gz/,/sha256/{s/sha256 ".*"/sha256 "'"${SHA_MACOS_ARM64}"'"/;}' "$FORMULA_FILE"
          
          # macOS x86_64
          sed -i.bak '/x86_64-apple-darwin\.tar\.gz/,/sha256/{s/sha256 ".*"/sha256 "'"${SHA_MACOS_X64}"'"/;}' "$FORMULA_FILE"
          
          # Linux ARM64
          sed -i.bak '/aarch64-unknown-linux-gnu\.tar\.gz/,/sha256/{s/sha256 ".*"/sha256 "'"${SHA_LINUX_ARM64}"'"/;}' "$FORMULA_FILE"
          
          # Linux x86_64
          sed -i.bak '/x86_64-unknown-linux-gnu\.tar\.gz/,/sha256/{s/sha256 ".*"/sha256 "'"${SHA_LINUX_X64}"'"/;}' "$FORMULA_FILE"
          
          echo "Formula file updated successfully"
          
          # Display changes
          echo "Formula updated:"
          git diff --color=always

      - name: Commit and Push
        run: |
          set -e
          
          # Configure git
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Configure remote URL with token
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          FORMULA_NAME=${{ github.event.client_payload.formula || github.event.inputs.formula }}
          VERSION=${{ github.event.client_payload.version || github.event.inputs.version }}
          
          echo "Adding formula file to git..."
          git add Formula/${FORMULA_NAME}.rb
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m "Update ${FORMULA_NAME} to ${VERSION}"
            echo "Pushing changes..."
            git push origin HEAD:master
          fi